name: Build and Release Extension

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install web-ext
      run: npm install -g web-ext
        
    - name: Get version
      id: version
      run: echo "version=$(node -p "require('./src/manifest.json').version")" >> $GITHUB_OUTPUT
        
    - name: Check if already released
      id: check
      run: |
        if git tag --list | grep -q "^v${{ steps.version.outputs.version }}$"; then
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "skip=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Build Firefox
      if: steps.check.outputs.skip == 'false'
      run: |
        web-ext build --source-dir=src --artifacts-dir=dist --overwrite-dest
        cd dist && mv *.zip firefox-v${{ steps.version.outputs.version }}.xpi
        
    - name: Build Chrome
      if: steps.check.outputs.skip == 'false'
      run: |
        mkdir chrome && cp -r src/* chrome/
        node -e "const fs=require('fs'); const m=JSON.parse(fs.readFileSync('chrome/manifest.json')); delete m.browser_specific_settings; fs.writeFileSync('chrome/manifest.json', JSON.stringify(m,null,2));"
        cd chrome && zip -r ../dist/chrome-v${{ steps.version.outputs.version }}.zip .
        
    - name: Prerelease
      if: steps.check.outputs.skip == 'false'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: "v${{ steps.version.outputs.version }}"
        files: |
          dist/firefox-v${{ steps.version.outputs.version }}.xpi
          dist/chrome-v${{ steps.version.outputs.version }}.zip
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

